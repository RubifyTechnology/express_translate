<div class="content" id="content_language">
  <%= render "/express_translate/ajax/languages/content_language" %>
</div>

<div class="popup" style="height: 90px">
  <form id="add_language">
    <div class="title">Add Language</div>
    <div class="row">
      <label for="text">Language:</label>
      <select id="lang_select">
        <% @selects.each do |option| %>
          <option value="<%= option[0] %>" data-icon="/assets/express_translate/flags/<%= option[0] %>.png"><%= option[1] %></option>
        <% end %>
      </select>
    </div>
        
    <div style="clear: both"></div>
    <input type="submit" class='btn_green' value="Save"/>
  </form>
</div>

<script>
  $(".back").attr({href:"/express_translate"});

  $('#lang_select').wSelect({
    size: 12,
    highlight: false
  });
  
  var popup = $('.popup');
  var contentLanguage = $("#content_language");
  
  $(".add").click(function(event) {
    event.preventDefault();
    var form = $("#add_language");
    var input_language = form.find("#lang_select")
    var title = form.find(".title");
    title.html("Add Language");
    input_language.val("en").change();
    popup.bPopup({
      transition: 'slideDown',
      onOpen: function () {
        form.unbind("submit");
        form.submit(function(eventS) {
          eventS.preventDefault();
          $.ajax({
            type: "POST",
            url: "/express_translate/ajax/language/add",
            data: {
              packages: "<%= params[:packages] %>",
              id: input_language.val(),
              text: input_language.find("option[value='"+ input_language.val() +"']").html()
            },
            success: function(data) {
              if (typeof(data.success) == "undefined"){
                popup.bPopup().close();
                window.notification("Successful for save!", true);
                contentLanguage.html(data);
                runJavascriptsLanguage();
              } else {
                window.notification(data.error, false);
              }
            }
          })
    
        });
      }      
    });
    return false;
  })

  var runJavascriptsLanguage = function () {
    
    $(".remove").click(function(event) {
      event.preventDefault();
      
      $(".delete_dialog_" + event.currentTarget.attributes.data.value).dialog({
        resizable: false,
        height:140,
        modal: true,
        buttons: {
          Yes: function() {
            $(this).dialog("close");
            var dataSent = {
                id: event.target.attributes.data.value,
                packages: "<%= params[:packages] %>"
              }
        
            $.ajax({
              url: "/express_translate/ajax/language/delete",
              type: "POST",
              data: dataSent,
              success: function (data){
                if (typeof(data.success) == "undefined") {
                  contentLanguage.html(data);
                  window.notification("Successful for delete!", true);
                  runJavascriptsLanguage();
                } else {
                  window.notification(data.error, false);
                }
              }
            })
          },
          No: function() {
            $(this).dialog("close");
          }
        }
      });
    });
    
    $(".set_origin").click(function(event) {
      event.preventDefault();
      var dataSent = {
          id: event.target.attributes.data.value,
          packages: "<%= params[:packages] %>"
        }
      $.ajax({
        url: "/express_translate/ajax/language/set_origin",
        type: "POST",
        data: dataSent,
        success: function (data){
          if (typeof(data.success) == "undefined") {
            contentLanguage.html(data);
            window.notification("Successful for set origin language!", true);
            runJavascriptsLanguage();
          } else {
            window.notification(data.error, false);
          }
        }
      })
    });
    
    $(".setting").click(function(event) {
      event.preventDefault();
      var form = $("#add_language");
      var input_language = form.find("#lang_select")
      var title = form.find(".title");
      title.html("Update Language");
      var old_id = event.target.attributes.data.value;
      input_language.val(old_id).change();
      popup.bPopup({
        transition: 'slideDown',
        onOpen: function () {
          form.unbind("submit");
          form.submit(function(eventS) {
            eventS.preventDefault();
            $.ajax({
              type: "POST",
              url: "/express_translate/ajax/language/update",
              data: {
                packages: "<%= params[:packages] %>",
                id: input_language.val(),
                text: input_language.find("option[value='"+ input_language.val() +"']").html(),
                old_id: old_id
              },
              success: function(data) {
                if (typeof(data.success) == "undefined"){
                  popup.bPopup().close();
                  window.notification("Successful for update!", true);
                  contentLanguage.html(data);
                  runJavascriptsLanguage();
                } else {
                  window.notification(data.error, false);
                }
              }
            })
          });
        }      
      });
    });
    
    $(".json").click(function(event) {
      event.preventDefault();
      openInNewTab(window.location.origin + "/express_translate/service/" + $(event.target).attr("data") + ".json")
    });
    
    var obj = $(".lang");

    obj.on('dragenter', function (e){
      e.stopPropagation();
      e.preventDefault();
      $(this).removeClass("add_files");
    });

    obj.on('dragover', function (e){
       e.stopPropagation();
       e.preventDefault();
       $(this).addClass("add_files");
    });

    obj.on('drop', function (e){
       $(this).removeClass("add_files");
       e.preventDefault();
       var files = e.originalEvent.dataTransfer.files;
       handleFileUpload(files, obj);
    }); 
  
    obj.on('dragleave', function (e) {
      $(this).removeClass("add_files");
    });  
  
    function handleFileUpload(files, obj) {
      for (var i = 0; i < files.length; i++) {
        var fd = new FormData();
        fd.append('file_yml', files[i]);
        sendFileToServer(fd);
      }
    }
  
    function sendFileToServer(formData) {
      var uploadURL ="/express_translate/import_yml";
      var extraData ={};
      var jqXHR = $.ajax({
        xhr: function() {
          var xhrobj = $.ajaxSettings.xhr();
          if (xhrobj.upload) {
            xhrobj.upload.addEventListener('progress', function(event) {
              var percent = 0;
              var position = event.loaded || event.position;
              var total = event.total;
              if (event.lengthComputable) {
                percent = Math.ceil(position / total * 100);
              }
            }, false);
          }
          return xhrobj;
        },
        url: uploadURL,
        type: "POST",
        contentType:false,
        processData: false,
        cache: false,
        data: formData,
        success: function(data){
          console.log(data)
          $(".import").html("Import");
          setTimeout(function(){
            // window.location.reload();
          }, 100);
        }
      });
    }
    
  }

  runJavascriptsLanguage();

</script>